version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/php:8.3
    working_directory: ~/project

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Copy default.conf to Nginx container
          command: |
            docker compose exec -T nginx cp /home/circleci/project/docker/nginx/default.conf /etc/nginx/conf.d/default.conf

      - run:
          name: Set permissions for default.conf
          command: |
            docker compose exec -T nginx chmod 644 /etc/nginx/conf.d/default.conf



      - run:
          name: Check local file paths before starting Docker Compose
          command: |
            echo "Checking local files..."
            ls -la ./docker/nginx/
            ls -la ./src/

      - run:
          name: Set environment variables
          command: echo "APP_ENV=testing" >> .env

      - run:
          name: Check file permissions
          command: |
            ls -la /home/circleci/project/docker/nginx/default.conf
            ls -la /etc/nginx/conf.d/default.conf




      - run:
          name: Start Docker Compose
          command: docker compose -f docker-compose.yml up --build

      - run:
          name: Check file paths in CircleCI
          command: |
            docker compose exec nginx ls -la /home/circleci/project/docker/nginx/
            docker compose exec nginx ls -la /etc/nginx/conf.d/

      - run:
          name: Laravel dependency installation
          command: docker compose exec -T app composer install

      - run:
          name: Set .env file
          command: docker compose exec -T app cp .env.example .env.testing

      - run:
          name: Generate application key
          command: docker compose exec -T app php artisan key:generate --env=testing

      - run:
          name: Run migrations
          command: docker compose exec -T app php artisan migrate --env=testing

      - run:
          name: Run PHPUnit tests
          command: docker compose -f docker-compose.yml exec -T app vendor/bin/phpunit --configuration phpunit.xml --stop-on-failure

      - run:
          name: Stop Docker Compose
          command: docker compose -f docker-compose.ci yml down

workflows:
  version: 2
  test:
    jobs:
      - build
