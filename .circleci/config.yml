version: 2.1

executors:
  machine-executor:
    machine:
      image: ubuntu-2404:2024.05.1
    working_directory: ~/laravel-ci

jobs:
  build:
    executor: machine-executor
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      - run:
          name: Start Docker Compose
          command: docker compose -f docker-compose.yml up -d --build


      - run:
          name: List Docker Containers
          command: docker ps  # コンテナの状態を確認する

      - run:
          name: Laravel dependency installation
          command: docker compose exec -T php composer install


      # - run:
      #     name: Create .env.testing file
      #     command: |
      #       echo "DB_CONNECTION=mysql" > .env.testing
      #       echo "DB_HOST=mysql" >> .env.testing
      #       echo "DB_PORT=3306" >> .env.testing
      #       echo "DB_DATABASE=laravel_db" >> .env.testing
      #       echo "DB_USERNAME=laravel_user" >> .env.testing
      #       echo "DB_PASSWORD=laravel_pass" >> .env.testing


      # - run:
      #     name: Check .env.testing
      #     command: docker compose exec -T php ls -a /var/www/

      # - run:
      #     name: Check .env.testing file
      #     command: cat .env.testing

      # - run:
      #     name: Copy .env.testing to Docker container
      #     command: docker compose exec -T php cp /var/www/.env.testing /var/www/.env


      - run:
          name: Create .env file from environment variables
          command: |
            echo "DB_CONNECTION=${DB_CONNECTION}" > .env
            echo "DB_HOST=${DB_HOST}" >> .env
            echo "DB_PORT=${DB_PORT}" >> .env
            echo "DB_DATABASE=${DB_DATABASE}" >> .env
            echo "DB_USERNAME=${DB_USERNAME}" >> .env
            echo "DB_PASSWORD=${DB_PASSWORD}" >> .env



      # - run:
      #     name: Set .env file
      #     command: docker compose exec -T php cp .env.example .env.testing

      - run:
          name: Generate application key
          command: docker compose exec -T php php artisan key:generate --env=testing

      - run:
          name: Run migrations
          command: docker compose exec -T php php artisan migrate --env=testing

      - run:
          name: Run PHPUnit tests
          command: docker compose -f docker-compose.yml exec -T app vendor/bin/phpunit --configuration phpunit.xml --stop-on-failure

      - run:
          name: Stop Docker Compose
          command: docker compose -f docker-compose.yml down

workflows:
  version: 2
  test:
    jobs:
      - build
